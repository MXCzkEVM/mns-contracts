{
  "address": "0x1a817BeE31ceFB905001B2173b9337dd44F9C60A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_metaDataUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xff45d89526b7d3bab744d5e906380fd996b6c9a138020b98205d42ab5d41ced0",
  "receipt": {
    "to": null,
    "from": "0x245237D8cD588F0999c38331EBc97C337c007F2e",
    "contractAddress": "0x1a817BeE31ceFB905001B2173b9337dd44F9C60A",
    "transactionIndex": 3,
    "gasUsed": "315207",
    "logsBloom": "0x
    "blockHash": "0x9ed77d3a64059d10b5726f30932ae8fe3e9ad0186ebc7522d3ecc8eb7115f313",
    "transactionHash": "0xff45d89526b7d3bab744d5e906380fd996b6c9a138020b98205d42ab5d41ced0",
    "logs": [],
    "blockNumber": 383125,
    "cumulativeGasUsed": "592003",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "https://metadata.mxc.com"
  ],
  "numDeployments": 3,
  "solcInputHash": "2c0eb307c5c04aca158dc0df5329149a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metaDataUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/StaticMetadataService.sol\":\"StaticMetadataService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"contracts/wrapper/StaticMetadataService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract StaticMetadataService {\\n    using Strings for uint256;\\n\\n    string private _uri;\\n\\n    constructor(string memory _metaDataUri) {\\n        _uri = _metaDataUri;\\n    }\\n\\n    function uri(uint256 tokenId) public view returns (string memory) {\\n        return\\n            bytes(_uri).length > 0\\n                ? string(abi.encodePacked(_uri, tokenId.toString()))\\n                : \\\"\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xc7dc209c1c685917b13228d3872cae08cd9c8b63f7ecb8bcead452b6978faffc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161069d38038061069d83398101604081905261002f91610058565b600061003b82826101aa565b5050610269565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561006b57600080fd5b82516001600160401b038082111561008257600080fd5b818501915085601f83011261009657600080fd5b8151818111156100a8576100a8610042565b604051601f8201601f19908116603f011681019083821181831017156100d0576100d0610042565b8160405282815288868487010111156100e857600080fd5b600093505b8284101561010a57848401860151818501870152928501926100ed565b600086848301015280965050505050505092915050565b600181811c9082168061013557607f821691505b60208210810361015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a557600081815260208120601f850160051c810160208610156101825750805b601f850160051c820191505b818110156101a15782815560010161018e565b5050505b505050565b81516001600160401b038111156101c3576101c3610042565b6101d7816101d18454610121565b8461015b565b602080601f83116001811461020c57600084156101f45750858301515b600019600386901b1c1916600185901b1785556101a1565b600085815260208120601f198616915b8281101561023b5788860151825594840194600190910190840161021c565b50858210156102595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610425806102786000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004361003e3660046101c0565b610059565b60405161005091906101fd565b60405180910390f35b6060600080805461006990610230565b90501161008557604051806020016040528060008152506100b1565b6000610090836100b7565b6040516020016100a1929190610286565b6040516020818303038152906040525b92915050565b6060816000036100de5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561010857806100f281610346565b91506101019050600a83610375565b91506100e2565b60008167ffffffffffffffff81111561012357610123610389565b6040519080825280601f01601f19166020018201604052801561014d576020820181803683370190505b5090505b84156101b85761016260018361039f565b915061016f600a866103b2565b61017a9060306103c6565b60f81b81838151811061018f5761018f6103d9565b60200101906001600160f81b031916908160001a9053506101b1600a86610375565b9450610151565b949350505050565b6000602082840312156101d257600080fd5b5035919050565b60005b838110156101f45781810151838201526020016101dc565b50506000910152565b602081526000825180602084015261021c8160408501602087016101d9565b601f01601f19169190910160400192915050565b600181811c9082168061024457607f821691505b60208210810361026457634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161027c8185602086016101d9565b9290920192915050565b600080845481600182811c9150808316806102a257607f831692505b602080841082036102c157634e487b7160e01b86526022600452602486fd5b8180156102d557600181146102ea57610317565b60ff1986168952841515850289019650610317565b60008b81526020902060005b8681101561030f5781548b8201529085019083016102f6565b505084890196505b505050505050610327818561026a565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161035857610358610330565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826103845761038461035f565b500490565b634e487b7160e01b600052604160045260246000fd5b818103818111156100b1576100b1610330565b6000826103c1576103c161035f565b500690565b808201808211156100b1576100b1610330565b634e487b7160e01b600052603260045260246000fdfea264697066735822122000ad4000b1389b3deb90837c347575f4ce3456ae9415910a2c3bcb9e550914a764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004361003e3660046101c0565b610059565b60405161005091906101fd565b60405180910390f35b6060600080805461006990610230565b90501161008557604051806020016040528060008152506100b1565b6000610090836100b7565b6040516020016100a1929190610286565b6040516020818303038152906040525b92915050565b6060816000036100de5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561010857806100f281610346565b91506101019050600a83610375565b91506100e2565b60008167ffffffffffffffff81111561012357610123610389565b6040519080825280601f01601f19166020018201604052801561014d576020820181803683370190505b5090505b84156101b85761016260018361039f565b915061016f600a866103b2565b61017a9060306103c6565b60f81b81838151811061018f5761018f6103d9565b60200101906001600160f81b031916908160001a9053506101b1600a86610375565b9450610151565b949350505050565b6000602082840312156101d257600080fd5b5035919050565b60005b838110156101f45781810151838201526020016101dc565b50506000910152565b602081526000825180602084015261021c8160408501602087016101d9565b601f01601f19169190910160400192915050565b600181811c9082168061024457607f821691505b60208210810361026457634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161027c8185602086016101d9565b9290920192915050565b600080845481600182811c9150808316806102a257607f831692505b602080841082036102c157634e487b7160e01b86526022600452602486fd5b8180156102d557600181146102ea57610317565b60ff1986168952841515850289019650610317565b60008b81526020902060005b8681101561030f5781548b8201529085019083016102f6565b505084890196505b505050505050610327818561026a565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161035857610358610330565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826103845761038461035f565b500490565b634e487b7160e01b600052604160045260246000fd5b818103818111156100b1576100b1610330565b6000826103c1576103c161035f565b500690565b808201808211156100b1576100b1610330565b634e487b7160e01b600052603260045260246000fdfea264697066735822122000ad4000b1389b3deb90837c347575f4ce3456ae9415910a2c3bcb9e550914a764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22968,
        "contract": "contracts/wrapper/StaticMetadataService.sol:StaticMetadataService",
        "label": "_uri",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}