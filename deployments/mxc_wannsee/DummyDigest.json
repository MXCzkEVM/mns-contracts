{
  "address": "0xe5f46E29D91BeBa5C58a83f8558d912820FaC267",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x0eb940a687e2ebefdf2089b250edb30ede912f4dcf96f77212a43361de5c3570",
  "receipt": {
    "to": null,
    "from": "0x52f60448790E485F38f2Aa9c867CD0DD647c0b73",
    "contractAddress": "0xe5f46E29D91BeBa5C58a83f8558d912820FaC267",
    "transactionIndex": 1,
    "gasUsed": "123877",
    "logsBloom": "0x
    "blockHash": "0xe78c631a9178d8d636a57501276aad72a068c09943a01ddfe68792637ba15a0a",
    "transactionHash": "0x0eb940a687e2ebefdf2089b250edb30ede912f4dcf96f77212a43361de5c3570",
    "logs": [],
    "blockNumber": 83,
    "cumulativeGasUsed": "255608",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b0f86eb025a2bf184421368d827bdf79",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a dummy DNSSEC digest that approves all hashes, for testing.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/digests/DummyDigest.sol\":\"DummyDigest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/digests/Digest.sol\":{\"content\":\"pragma solidity ^0.8.4;\\r\\n\\r\\n/**\\r\\n * @dev An interface for contracts implementing a DNSSEC digest.\\r\\n */\\r\\ninterface Digest {\\r\\n    /**\\r\\n     * @dev Verifies a cryptographic hash.\\r\\n     * @param data The data to hash.\\r\\n     * @param hash The hash to compare to.\\r\\n     * @return True iff the hashed data matches the provided hash value.\\r\\n     */\\r\\n    function verify(\\r\\n        bytes calldata data,\\r\\n        bytes calldata hash\\r\\n    ) external pure virtual returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x3314bbf1bb097a3aaede0fd84b6df346a815ab038153bc7421e78d93159cc933\"},\"contracts/dnssec-oracle/digests/DummyDigest.sol\":{\"content\":\"pragma solidity ^0.8.4;\\r\\n\\r\\nimport \\\"./Digest.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implements a dummy DNSSEC digest that approves all hashes, for testing.\\r\\n */\\r\\ncontract DummyDigest is Digest {\\r\\n    function verify(\\r\\n        bytes calldata,\\r\\n        bytes calldata\\r\\n    ) external pure override returns (bool) {\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1b14067fe9afc3a0417ef451af88b56c9f1edb0818cf24c012a59a3418e05ccb\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610147806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7e83aee14610030575b600080fd5b61004861003e3660046100a5565b6001949350505050565b604051901515815260200160405180910390f35b60008083601f84011261006e57600080fd5b50813567ffffffffffffffff81111561008657600080fd5b60208301915083602082850101111561009e57600080fd5b9250929050565b600080600080604085870312156100bb57600080fd5b843567ffffffffffffffff808211156100d357600080fd5b6100df8883890161005c565b909650945060208701359150808211156100f857600080fd5b506101058782880161005c565b9598949750955050505056fea2646970667358221220e907933472d8a917e9de2b8c373e68ae108fdd7d620f7322d00af1652bcaf31364736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7e83aee14610030575b600080fd5b61004861003e3660046100a5565b6001949350505050565b604051901515815260200160405180910390f35b60008083601f84011261006e57600080fd5b50813567ffffffffffffffff81111561008657600080fd5b60208301915083602082850101111561009e57600080fd5b9250929050565b600080600080604085870312156100bb57600080fd5b843567ffffffffffffffff808211156100d357600080fd5b6100df8883890161005c565b909650945060208701359150808211156100f857600080fd5b506101058782880161005c565b9598949750955050505056fea2646970667358221220e907933472d8a917e9de2b8c373e68ae108fdd7d620f7322d00af1652bcaf31364736f6c63430008110033",
  "devdoc": {
    "details": "Implements a dummy DNSSEC digest that approves all hashes, for testing.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}